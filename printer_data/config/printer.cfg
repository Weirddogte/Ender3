[include shell_command.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include KAMP_Settings.cfg]
#[include PIS.cfg]

[exclude_object]
[display_status]
[pause_resume]

# [homing_override]
# gcode:
#   DOCK
#   G28 X
#   G28 Y
#   G1 X149 Y126 F2500
#   G28 Z
#   G1 Z15 F2500
#   G28 X
#   UNDOCK



[gcode_macro clean_nozzle]
gcode:
  G1 X235 F8000
  G1 X150 F8000

[gcode_macro PAUSE]

description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  
[gcode_macro UNLOAD_FILAMENT]
gcode:
  G1 E4 F300
  G1 E-50 F300
[gcode_macro LOAD_FILAMENT]
gcode:
  G1 E50 F300

[gcode_macro CANCEL_PRINT]

description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE



[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor SKR E3]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[gcode_macro start_print]
gcode:
		M104 S{params.TOOL_TEMP}# Heat the tool to temperature and wait
		M140 S{params.BED_TEMP}
        M109 S{params.TOOL_TEMP}
        M190 S{params.BED_TEMP}
        G1 X25 F3000
        G28
        SET_LED LED="neo" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
        BED_MESH_CLEAR
        BED_MESH_CALIBRATE ADAPTIVE=1


	
		G92 E0 							# Reset Extruder
		G1 Z2.0 F3000 # Move Z Axis to travel height
        
		G1 X25 Y0.1 Z0.2 F5000.0 		# Move to start position
		LINE_PURGE

[gcode_macro END_PRINT]
gcode:
      # Turn off bed, extruder, and fan
      M140 S0
      M104 S0
      M106 S0
      # Move nozzle away from print while retracting
      G91
      G1 Z10 F3000

      G90
      G1 X0 Y200 F2000
      G1 Z17.5 F3000
     
      G1 X100 F2000
      # Raise nozzle by 10mm
   
    


#[input_shaper]
#shaper_freq_x: 42.75
#shaper_freq_y: 46.63
#haper_type: mzv

# [gcode_macro CANCEL_PRINT]
# description: "Cancel the running print"
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#   TURN_OFF_HEATERS

#   M220 S100 ;Reset Speed factor override percentage to default (100%)
#   M221 S100 ;Reset Extrude factor override percentage to default (100%)

#   SAFE_RETRACT
#   SAFE_PARK

#   M106 S0 ;disable fan

#   CANCEL_PRINT_BASE
[neopixel neo]
pin:PA8
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count:15
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   See the "led" section for information on these parameters.
[gcode_macro ledcolorchange]
gcode:
        SET_LED LED=neo RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE}
[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -45
y_offset: -8
samples: 3
speed: 2
#z_offset: 0
[bed_mesh]
speed: 80
horizontal_move_z: 7
mesh_min: 15, 32 #this will likely be a good starting pos
mesh_max: 190, 227  #this will need to be calculated
probe_count: 3,3 #number of x,y probing points
mesh_pps: 2,2 #number of points to interpret between each probing point
fade_start: 1 #height in millimeters to begin fading out the applied effect of the mesh
fade_end: 10 #height in millimeters to end the applied effect of the mesh. If you want to disable fade make this value lower than the value of fade_start
fade_target: 0
[safe_z_home]
home_xy_position: 173,133   # Nozzle coordinates
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_screws]
screw1: 25, 35
screw2: 205, 35
screw3: 205, 205
screw4: 25, 205


[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.650
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min:-6.0


[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.678592
pressure_advance:0.0
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
max_extrude_cross_section: 50
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 260

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.750
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130


[fan]
pin:PB15
hardware_pwm:true

[heater_fan hotend_fan]
pin: PC6


[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_130040000750414235363020-if00


[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_accel_to_decel:3000
square_corner_velocity:5
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.915
#*# pid_ki = 2.216
#*# pid_kd = 107.816
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.982
#*# pid_ki = 1.315
#*# pid_kd = 1012.632
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 82.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 53.8
#*#
#*# [bltouch]
#*# z_offset = 3.701
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.006667, 0.020833, -0.005000
#*# 	0.003333, -0.012500, 0.000833
#*# 	0.061667, 0.154167, 0.151667
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 190.0
#*# min_y = 32.0
#*# max_y = 227.0
